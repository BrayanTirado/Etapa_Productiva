#!/usr/bin/env python3
"""
Script de prueba para diagnosticar problemas de env√≠o de emails
Ejecuta este script para verificar la configuraci√≥n de email
"""

import os
import sys
import smtplib
from dotenv import load_dotenv

# Cargar variables de entorno
load_dotenv()

def test_smtp_connection():
    """Prueba la conexi√≥n SMTP"""
    print("=" * 60)
    print("PRUEBA DE CONEXI√ìN SMTP - DIAGN√ìSTICO")
    print("=" * 60)

    # Obtener configuraci√≥n
    server = os.environ.get('MAIL_SERVER', 'smtp.gmail.com')
    port = int(os.environ.get('MAIL_PORT', '587'))
    username = os.environ.get('MAIL_USERNAME')
    password = os.environ.get('MAIL_PASSWORD')
    use_tls = os.environ.get('MAIL_USE_TLS', 'True').lower() == 'true'
    use_ssl = os.environ.get('MAIL_USE_SSL', 'False').lower() == 'true'

    print("Configuraci√≥n actual:")
    print(f"  Servidor: {server}")
    print(f"  Puerto: {port}")
    print(f"  Usuario: {username}")
    print(f"  Contrase√±a: {'***configurada***' if password else 'NO CONFIGURADA'}")
    print(f"  Usar TLS: {use_tls}")
    print(f"  Usar SSL: {use_ssl}")
    print()

    # Verificar configuraci√≥n b√°sica
    if not username or not password:
        print("‚ùå ERROR: MAIL_USERNAME o MAIL_PASSWORD no est√°n configurados")
        print("   Revisa tu archivo .env")
        return False

    try:
        print("üîÑ Intentando conectar al servidor SMTP...")

        if use_ssl:
            smtp = smtplib.SMTP_SSL(server, port, timeout=10)
            print("‚úÖ Conexi√≥n SSL establecida")
        else:
            smtp = smtplib.SMTP(server, port, timeout=10)
            print("‚úÖ Conexi√≥n SMTP establecida")

        if use_tls:
            smtp.starttls()
            print("‚úÖ TLS iniciado correctamente")

        print("üîÑ Intentando autenticaci√≥n...")
        smtp.login(username, password)
        print("‚úÖ Autenticaci√≥n exitosa")

        smtp.quit()
        print("‚úÖ Conexi√≥n cerrada correctamente")

        print("\n‚úÖ PRUEBA DE CONEXI√ìN SMTP EXITOSA")
        print("   El problema podr√≠a estar en la configuraci√≥n de Flask-Mail")
        print("   o en la generaci√≥n de URLs externas.")
        return True

    except smtplib.SMTPAuthenticationError as e:
        print(f"‚ùå ERROR DE AUTENTICACI√ìN: {e}")
        print("\nPosibles soluciones:")
        print("  ‚Ä¢ Para Gmail: Aseg√∫rate de tener activada la autenticaci√≥n de 2 factores")
        print("  ‚Ä¢ Para Gmail: Usa una 'contrase√±a de aplicaci√≥n', no tu contrase√±a normal")
        print("  ‚Ä¢ Crea una contrase√±a de aplicaci√≥n en: https://myaccount.google.com/apppasswords")
        print("  ‚Ä¢ Verifica que no haya restricciones de seguridad en tu cuenta Gmail")

    except smtplib.SMTPConnectError as e:
        print(f"‚ùå ERROR DE CONEXI√ìN: {e}")
        print("\nPosibles soluciones:")
        print(f"  ‚Ä¢ Verifica que el puerto {port} no est√© bloqueado por firewall")
        print("  ‚Ä¢ Verifica que el servidor tenga acceso a internet")
        print("  ‚Ä¢ Prueba con un servidor DNS diferente")

    except smtplib.SMTPException as e:
        print(f"‚ùå ERROR SMTP: {e}")
        print("\nPosibles soluciones:")
        print("  ‚Ä¢ Verifica la configuraci√≥n del servidor SMTP")
        print("  ‚Ä¢ Intenta cambiar el puerto (587 para TLS, 465 para SSL)")

    except Exception as e:
        print(f"‚ùå ERROR INESPERADO: {e}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")

    print("\n‚ùå PRUEBA DE CONEXI√ìN SMTP FALLIDA")
    return False

def test_flask_mail():
    """Prueba Flask-Mail con la configuraci√≥n actual"""
    print("\n" + "=" * 60)
    print("PRUEBA DE FLASK-MAIL")
    print("=" * 60)

    try:
        from flask import Flask
        from flask_mail import Mail, Message

        app = Flask(__name__)

        # Configurar Flask-Mail
        app.config['MAIL_SERVER'] = os.environ.get('MAIL_SERVER', 'smtp.gmail.com')
        app.config['MAIL_PORT'] = int(os.environ.get('MAIL_PORT', '587'))
        app.config['MAIL_USE_TLS'] = os.environ.get('MAIL_USE_TLS', 'True').lower() == 'true'
        app.config['MAIL_USE_SSL'] = os.environ.get('MAIL_USE_SSL', 'False').lower() == 'true'
        app.config['MAIL_USERNAME'] = os.environ.get('MAIL_USERNAME')
        app.config['MAIL_PASSWORD'] = os.environ.get('MAIL_PASSWORD')
        app.config['MAIL_DEFAULT_SENDER'] = os.environ.get('MAIL_DEFAULT_SENDER')

        mail = Mail(app)

        with app.app_context():
            print("üîÑ Intentando enviar email de prueba con Flask-Mail...")

            msg = Message(
                subject='Prueba de Email - Sistema SENA',
                recipients=[app.config['MAIL_DEFAULT_SENDER']],
                body='Este es un email de prueba para verificar la configuraci√≥n de Flask-Mail.'
            )

            mail.send(msg)
            print("‚úÖ Email enviado exitosamente con Flask-Mail")
            return True

    except Exception as e:
        print(f"‚ùå ERROR con Flask-Mail: {e}")
        import traceback
        print(f"Traceback: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    print("üîß DIAGN√ìSTICO DE CONFIGURACI√ìN DE EMAIL")
    print("Este script probar√° la configuraci√≥n de env√≠o de emails")
    print()

    # Prueba 1: Conexi√≥n SMTP b√°sica
    smtp_ok = test_smtp_connection()

    # Prueba 2: Flask-Mail (solo si SMTP funciona)
    if smtp_ok:
        flask_mail_ok = test_flask_mail()
        if flask_mail_ok:
            print("\nüéâ TODAS LAS PRUEBAS PASARON EXITOSAMENTE")
            print("   El env√≠o de emails deber√≠a funcionar correctamente")
        else:
            print("\n‚ö†Ô∏è  SMTP funciona pero Flask-Mail tiene problemas")
            print("   El problema podr√≠a estar en la configuraci√≥n de Flask")
    else:
        print("\n‚ùå Las pruebas b√°sicas fallaron")
        print("   Corrige los problemas de configuraci√≥n antes de continuar")

    print("\n" + "=" * 60)
    print("FIN DEL DIAGN√ìSTICO")
    print("=" * 60)